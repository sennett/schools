<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>ðŸ˜Ž</title>
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        .layout__controls {
            height: 5%;
        }

        .layout__map {
            height: 95%;
        }

    </style>
</head>
<body class="layout">
<div class="layout__controls">
    <label>Distance (m) <input id="distance" value="600" /> </label>
    <label>minimum # required schools <input id="numSchools" value="3"/></label>
    <button id="search">Search</button>
</div>
<div id="map" class="layout__map"></div>
<script>
    let map
    let infoWindow

    function initMap () { // eslint-disable-line no-unused-vars
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 52.479954, lng: -1.9012899 },
            zoom: 13
        })

        infoWindow = new google.maps.InfoWindow()

        document.getElementById('search').onclick = () => {
            updateMap()
        }

        updateMap()
    }

    let allMarkers = []

    function updateMap () {
        allMarkers.forEach((marker) => marker.setMap(null))
        allMarkers = []
        infoWindow.close()
        let distance = document.getElementById('distance').value
        let numSchools = document.getElementById('numSchools').value
        fetch(`/data/${distance}/${numSchools}`)
                .then((response) => {
                    return response.json()
                })
                .then((clusters) => {

                    let alreadyAddedPointMarkers = {}
                    clusters.forEach((cluster) => {
                        let clusterLatLng = new google.maps.LatLng({ lat: cluster.center.y, lng: cluster.center.x })
                        let clusterMarker = new google.maps.Marker({
                            position: clusterLatLng,
                            map,
                            icon: `https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=${cluster.points.length}|e75480|000000`
                        })
                        allMarkers.push(clusterMarker)

                        let pointMarkers = []

                        cluster.points.forEach((point) => {
                            let pointMarker
                            if (alreadyAddedPointMarkers[point.urn]) {
                                pointMarker = alreadyAddedPointMarkers[point.urn]
                            } else {
                                let latlng = new google.maps.LatLng({ lat: point.y, lng: point.x })
                                pointMarker = new google.maps.Marker({
                                    position: latlng,
                                    map,
                                    icon: `http://maps.google.com/mapfiles/ms/icons/yellow-dot.png`
                                })
                                pointMarker.addListener('click', () => {
                                    infoWindow.close()
                                    infoWindow.setContent(`<a href="//${point.website}" target="_blank">${point.name}</a>`)
                                    infoWindow.open(map, pointMarker)
                                })
                                allMarkers.push(pointMarker)

                            }

                            pointMarkers.push(pointMarker)
                            alreadyAddedPointMarkers[point.urn] = pointMarker
                        })

                        clusterMarker.addListener('mouseover', () => {
                            pointMarkers.forEach((marker) => {
                                marker.setIcon(`http://maps.google.com/mapfiles/ms/icons/blue-dot.png`)
                            })
                        })

                        clusterMarker.addListener('mouseout', () => {
                            pointMarkers.forEach((marker) => {
                                marker.setIcon(`http://maps.google.com/mapfiles/ms/icons/yellow-dot.png`)
                            })
                        })
                    })
                })
    }

</script>
<script src="https://maps.googleapis.com/maps/api/js?key={{googleMapsApiKey}}&callback=initMap"
async defer></script></body>
</html>